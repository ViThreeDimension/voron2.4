[gcode_macro PRINT_START]
description: PRINT_START BED=100 EXTRUDER=240 SOAK=0 TEXTUREDPLATE=false NEVERMOREFANSPEED=1
gcode:
  {% set BED = params.BED|default(100)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(240)|float %}
  {% set SOAK = params.SOAK|default(0)|float %}
  {% set ON_TEXTURED_PLATE = params.TEXTUREDPLATE|default('false') %}
  {% set NEVERMORE_FAN_SPEED = params.NEVERMOREFANSPEED|default(1) %}
  {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
  
  CASELIGHT POWER=1
  BED_MESH_CLEAR   

  M106 S255          ; set print fan to full speed to avoid melting fan ducts
  M104 S{EXTRUDER}   ; pre-heat nozzle non-blocking
  M140 S{BED}        ; Pre-heat bed non-blocking

  CG28               ; Home all axes

  PARK_CENTER Z=15   # Position Nozzle at center to help preheat chamber

  SHOW TEXT='Heating bed...'
  M190 S{BED}        ; heat bed
  SET_NEVERMORE_SPEED SPEED={NEVERMORE_FAN_SPEED}

  clean_nozzle PURGE=false  ; clean nozzle

  ; Soak printer to let it thermally expand to have a constant first layer 
  {% if (SOAK|int) > 0 %}
    SHOW TEXT='starting Soak'
    {% for timer in range( SOAK|int,0,-1) %}
      # we cycle once a minute, so we can send an update to keep octoprint happy, rather than just sleeping for the entire soak
      SHOW TEXT='Soak: {timer|int}m remaining'
      M105
      ; if factor of 5 clean nozzle
      ; else wait 1 minute
      G4 P60000 # Wait 1 minute
          
    {% endfor %}
  SHOW TEXT='Soak Complete'
  {% endif %}

  clean_nozzle PURGE=false  ; clean nozzle

  SHOW TEXT='Quad Gantry Level'
  QUAD_GANTRY_LEVEL CALIBRATE=false

  SHOW TEXT='Bed Mesh'
  ADAPTIVE_BED_MESH SIZE={FL_SIZE}

  SHOW TEXT='Heating Extruder'
  M109 S{EXTRUDER}          ; Set and wait for nozzle to reach temperature
  clean_nozzle PURGE=false  ; clean nozzle

  SHOW TEXT='Calibrate Z'
  CALIBRATE_Z

  # Apply offset for textured plate that is lower than sensor probed
  M118 Is TEXTURED_PLATE_OFFSET applied: {ON_TEXTURED_PLATE == 'true'}
  {% if ON_TEXTURED_PLATE == 'true' %}
    TEXTURED_PLATE_OFFSET
  {% endif %}

  clean_nozzle PURGE=true  ; purge filament

  G90                         ; Use absolute coordinates
 
  SHOW TEXT='Print Started'

[gcode_macro PRINT_END]
description: PRINT_END KEEP_BED_AT=0
gcode:
    {% set BED = params.KEEP_BED_AT|default(0)|float %}
    SET_NEVERMORE_SPEED SPEED=1
  
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M140 S{BED}                    ; keep bed heat to chain prints
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X280 Y308 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    M117 Print Complete
    CASELIGHT POWER=0                     ; kill lights
    

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  SHOW TEXT='Print Resumed'


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  PRINT_END
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro SHOW]
description: SHOW TEXT=<your text> Display information on both screen and logs
gcode:
  {% set TEXT = params.TEXT %}
  M117 {TEXT}
  M118 {TEXT}

