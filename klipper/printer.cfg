# This file contains common pin mappings for the Fysetc Spider board.
# To use this config, the firmware should be compiled for the STM32F446.
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

# push all to printer -> scp -r klipper/* username@ip:~/klipper_config

###################################################################
#  Fluidd
###################################################################
[virtual_sdcard]
path: ~/gcode_files

[display_status]
[pause_resume]
[respond]

[include client_macros.cfg]
[include nozzle_scrub.cfg]
[include z_calibration.cfg]
[include z_calibration_homing.cfg]
[include filament_switch.cfg]
[include park_toolhead.cfg]
[include probe.cfg]
[include fan.cfg]
[include filament_sensor.cfg]
[include offset_macro.cfg]
[include light.cfg]
[include adaptive_bed_mesh.cfg]
[include unstress_print.cfg]
[include raspi_mcu_adxl.cfg]
[include pressure_advance_default.cfg]
[include pressure_advance_calibration.cfg]

### PIDs uncomment only one ###
[include dragon_normal_flow_pid.cfg]
#[include dragon_high_flow_pid.cfg]
#[include v6_pla_pid.cfg]

###################################################################
#  MCU
###################################################################
[mcu]
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper for Spider
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_230032000851363131363530-if00
##	If you want to use the Raspberry uart0 to communicate with Spider, 
##  you need to select 'Communication interface' to 'Serial (on USART1 PA10/PA9)' 
##  in 'make menuconfig' when you compile klipper and set the serial as below
##--------------------------------------------------------------------
serial: /dev/ttyAMA0
##--------------------------------------------------------------------

## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3500 ; safe 3500
max_accel_to_decel: 2500
max_z_velocity: 20			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
square_corner_velocity: 5.0

#####################################################################
#  X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: ^PA1 
position_min: 0

position_endstop: 300 # 300mm build
position_max: 300     # 300mm build

homing_speed: 80   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: ^PA2 
position_min: 0

position_endstop: 308 # 300mm build
position_max: 308     # 300mm build

homing_speed: 35  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In E1-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
##  In Z- Position
endstop_pin: ^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 4.285

position_max: 290 # 300mm build
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC14
uart_address: 0
interpolate: True
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E2-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC15
interpolate: True
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E3-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PD12
dir_pin: !PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PA15
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E4-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PE1
dir_pin: PE0
enable_pin: !PC5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PD11
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##	In E0-MOT Position
[extruder]
step_pin: PD5
dir_pin: !PD6
enable_pin: !PD4

##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_cross_section: 4
##      In E0 OUT Position
heater_pin: PB15
##	Validate the following thermistor type to make sure it is correct
sensor_type: PT1000
sensor_pin: PC2
pullup_resistor: 4700
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170

##	In E0-MOT Position
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PD7
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC0
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.5
min_temp: 0
max_temp: 115
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#######################################
#### Enclosure Temp Sensor Section ####
#######################################
[temperature_sensor enclosure_temp]
sensor_type: NTC 100K beta 3950
sensor_pin: PC1
min_temp: 0
max_temp: 100
gcode_id: C

#######################################
#### Raspberry pi Temp Sensor ####
#######################################
[temperature_sensor raspberry_temp]
sensor_type: temperature_host

#######################################
#### Spider pi Temp Sensor ####
#######################################
[temperature_sensor spider_temp]
sensor_type: temperature_mcu

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 5400 # 90 minutes


#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
spi_bus: spi1
##spi_software_mosi_pin: PA7
##spi_software_miso_pin: PA6
##spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
chain_count: 60
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: .6
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
  SET_LED LED=fysetc_mini12864 RED=0 GREEN=0.5 BLUE=1 INDEX=1 TRANSMIT=0
  SET_LED LED=fysetc_mini12864 RED=0 GREEN=0.5 BLUE=1 INDEX=2 TRANSMIT=0
  SET_LED LED=fysetc_mini12864 RED=0.2 GREEN=0 BLUE=0.6 INDEX=3 

#--------------------------------------------------------------------

  
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.715 
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.273
#*# pid_ki = 1.483
#*# pid_kd = 273.350
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.010000, -0.000000, -0.025000, -0.025000, 0.030000
#*# 	0.017500, 0.007500, -0.030000, -0.050000, -0.017500
#*# 	0.035000, 0.035000, 0.000000, -0.037500, -0.012500
#*# 	0.040000, 0.037500, 0.015000, -0.010000, 0.015000
#*# 	0.025000, 0.025000, 0.012500, 0.000000, 0.032500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
